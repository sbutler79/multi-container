# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
# Here we will push docker images to docker hub then trigger Amazon EBS to pull them and create new instance
version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/python:3.9

jobs:
  run-tests:
    working_directory: ~/app
    docker:
      - image: cimg/base:2022.09
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build container
          command: |
            docker build -t sbutler79/react-test -f ./client/Dockerfile.dev
      - run:
          name: Run tests
          command: |
            docker run -e CI=true sbutler79/react-test npm test -- --coverage
  build-and-push:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            docker build -t sbutler79/multi-client ./client
            docker build -t sbutler79/multi-nginx ./nginx
            docker build -t sbutler79/multi-server ./server
            docker build -t sbutler79/multi-worker ./worker
      - run:
          name: Login to docker
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_ID --password-stdin
      - run:
          name: Push docker image
          command: |
            docker push sbutler79/multi-client
            docker push sbutler79/multi-nginx
            docker push sbutler79/multi-server
            docker push sbutler79/multi-worker
  deploy-to-eb:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo apt update
            sudo apt install -y awscli
      - run:
          name: Update Elastic Beanstalk with dockerrun
          command: |
            aws s3 cp ./dockerrun.aws.json s3://elasticbeanstalk-eu-north-1-491085425180/multi-docker/dockerrun.aws.json
            aws elasticbeanstalk restart-app-server --environment-name Multi-Docker-env

workflows:
  build-and-test:
    jobs:
      - run-tests
  build-deploy:
    jobs:
      - build-and-push:
          filters:
              branches:
                only: 
                  - main # Only deploys when the commit is on the Main branch
      - deploy-to-eb:
          requires:
            - build-and-push
          filters:
              branches:
                only: 
                  - main # Only deploys when the commit is on the Main branch